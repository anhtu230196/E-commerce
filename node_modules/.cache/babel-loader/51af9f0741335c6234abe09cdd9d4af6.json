{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  // console.log(\"cartItems:\", cartItems);\n  // console.log(\"cartItemToAdd:\", cartItemToAdd);\n  // const index = cartItems.findIndex(\n  //   (cartItem) => cartItem.id === cartItemToAdd.id\n  // );\n  // if (index === -1) {\n  //   return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n  // } else {\n  //   cartItems[index].quantity += 1;\n  //   return [...cartItems];\n  // }\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/Front-End/ReactJS/crwn-shopping-page/src/redux/utils/cartUtils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB;;AAIA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD;;AACD,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACD,CA1BM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n  // console.log(\"cartItems:\", cartItems);\r\n  // console.log(\"cartItemToAdd:\", cartItemToAdd);\r\n\r\n  // const index = cartItems.findIndex(\r\n  //   (cartItem) => cartItem.id === cartItemToAdd.id\r\n  // );\r\n  // if (index === -1) {\r\n  //   return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n  // } else {\r\n  //   cartItems[index].quantity += 1;\r\n  //   return [...cartItems];\r\n  // }\r\n\r\n  const existingCartItem = cartItems.find(\r\n    (cartItem) => cartItem.id === cartItemToAdd.id\r\n  );\r\n\r\n  if (existingCartItem) {\r\n    return cartItems.map((cartItem) =>\r\n      cartItem.id === cartItemToAdd.id\r\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n        : cartItem\r\n    );\r\n  }\r\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}