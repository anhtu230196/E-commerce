{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Front-End\\\\ReactJS\\\\crwn-shopping-page\\\\src\\\\pages\\\\order-page\\\\OrderPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/order/Order';\nimport { fetchOrder } from '../../redux/actions/orderAction';\nimport { fetchOrdersByUserId, fetchOrdersNonUserId, orderLoading } from '../../redux/selectors/orderSelector';\nimport { selectCurrentUser } from '../../redux/selectors/userSelector';\nimport LoadingPage from '../loading-page/LoadingPage';\nimport \"./style.scss\";\n\nclass OrderPage extends Component {\n  componentDidMount() {\n    this.props.dispatch(fetchOrder());\n  }\n\n  render() {\n    const {\n      loading,\n      orderByUserId,\n      orderNonUserId,\n      userId\n    } = this.props; // console.log(orderByUserId);\n    // console.log(orderNonUserId);\n\n    return loading ? /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"order page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), !orderByUserId.length && !orderNonUserId.length && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" You have no orders yet \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 73\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orders__order\",\n        children: userId ? orderByUserId.reverse().map(order => /*#__PURE__*/_jsxDEV(Order, {\n          order: order\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 66\n        }, this)) : orderNonUserId.reverse().map(order => /*#__PURE__*/_jsxDEV(Order, {\n          order: order\n        }, order.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 67\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: orderLoading(state),\n    orderByUserId: fetchOrdersByUserId(state),\n    orderNonUserId: fetchOrdersNonUserId(state),\n    userId: selectCurrentUser(state)\n  };\n};\n\nexport default connect(mapStateToProps)(OrderPage);","map":{"version":3,"sources":["C:/Users/Admin/Documents/Front-End/ReactJS/crwn-shopping-page/src/pages/order-page/OrderPage.jsx"],"names":["React","Component","connect","Order","fetchOrder","fetchOrdersByUserId","fetchOrdersNonUserId","orderLoading","selectCurrentUser","LoadingPage","OrderPage","componentDidMount","props","dispatch","render","loading","orderByUserId","orderNonUserId","userId","length","reverse","map","order","id","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,EAAoDC,YAApD,QAAwE,qCAAxE;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAO,cAAP;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAC9BU,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,QAAX,CAAoBT,UAAU,EAA9B;AACH;;AACDU,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,aAAX;AAA0BC,MAAAA,cAA1B;AAA0CC,MAAAA;AAA1C,QAAqD,KAAKN,KAAhE,CADK,CAEL;AACA;;AACA,WACIG,OAAO,gBAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBACH;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,CAACC,aAAa,CAACG,MAAf,IAAyB,CAACF,cAAc,CAACE,MAAzC,iBAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFxD,eAGI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACKD,MAAM,GACHF,aAAa,CAACI,OAAd,GAAwBC,GAAxB,CAA4BC,KAAK,iBAAI,QAAC,KAAD;AAAsB,UAAA,KAAK,EAAEA;AAA7B,WAAYA,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAArC,CADG,GAGHN,cAAc,CAACG,OAAf,GAAyBC,GAAzB,CAA6BC,KAAK,iBAAI,QAAC,KAAD;AAAsB,UAAA,KAAK,EAAEA;AAA7B,WAAYA,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,gBAAtC;AAJR;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR;AAeH;;AAvB6B;;AA0BlC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHV,IAAAA,OAAO,EAAER,YAAY,CAACkB,KAAD,CADlB;AAEHT,IAAAA,aAAa,EAAEX,mBAAmB,CAACoB,KAAD,CAF/B;AAGHR,IAAAA,cAAc,EAAEX,oBAAoB,CAACmB,KAAD,CAHjC;AAIHP,IAAAA,MAAM,EAAEV,iBAAiB,CAACiB,KAAD;AAJtB,GAAP;AAMH,CAPD;;AASA,eAAevB,OAAO,CAACsB,eAAD,CAAP,CAAyBd,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Order from '../../components/order/Order';\r\nimport { fetchOrder } from '../../redux/actions/orderAction';\r\nimport { fetchOrdersByUserId, fetchOrdersNonUserId, orderLoading } from '../../redux/selectors/orderSelector';\r\nimport { selectCurrentUser } from '../../redux/selectors/userSelector';\r\nimport LoadingPage from '../loading-page/LoadingPage';\r\nimport \"./style.scss\"\r\n\r\nclass OrderPage extends Component {\r\n    componentDidMount() {\r\n        this.props.dispatch(fetchOrder())\r\n    }\r\n    render() {\r\n        const { loading, orderByUserId, orderNonUserId, userId } = this.props\r\n        // console.log(orderByUserId);\r\n        // console.log(orderNonUserId);\r\n        return (\r\n            loading ? <LoadingPage /> : (\r\n                <div className=\"orders\">\r\n                    <h1>order page</h1>\r\n                    {!orderByUserId.length && !orderNonUserId.length && <div> You have no orders yet </div>}\r\n                    <div className=\"orders__order\">\r\n                        {userId ?\r\n                            orderByUserId.reverse().map(order => <Order key={order.id} order={order} />)\r\n                            :\r\n                            orderNonUserId.reverse().map(order => <Order key={order.id} order={order} />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: orderLoading(state),\r\n        orderByUserId: fetchOrdersByUserId(state),\r\n        orderNonUserId: fetchOrdersNonUserId(state),\r\n        userId: selectCurrentUser(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrderPage);\r\n"]},"metadata":{},"sourceType":"module"}