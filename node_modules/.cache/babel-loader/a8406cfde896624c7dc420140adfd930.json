{"ast":null,"code":"import { FETCH_COLLECTIONS_SUCCESS, FETCH_ORDERS_START, PURCHASE_FAIL, PURCHASE_START, PURCHASE_SUCCESS } from \"../actions/typeActions\";\nconst initialState = {\n  orders: [],\n  loading: false\n};\n\nconst orderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case PURCHASE_START:\n      return { ...state,\n        loading: true\n      };\n\n    case PURCHASE_SUCCESS:\n      return { ...state,\n        loading: false\n      };\n\n    case PURCHASE_FAIL:\n      return { ...state,\n        loading: false\n      };\n\n    case FETCH_ORDERS_START:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_COLLECTIONS_SUCCESS:\n      return { ...state,\n        loading: false,\n        orders: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default orderReducer;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Front-End/ReactJS/crwn-shopping-page/src/redux/reducers/orderReducer.js"],"names":["FETCH_COLLECTIONS_SUCCESS","FETCH_ORDERS_START","PURCHASE_FAIL","PURCHASE_START","PURCHASE_SUCCESS","initialState","orders","loading","orderReducer","state","action","type","payload"],"mappings":"AAAA,SACEA,yBADF,EAEEC,kBAFF,EAGEC,aAHF,EAIEC,cAJF,EAKEC,gBALF,QAMO,wBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,cAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYF,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKH,gBAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYF,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKL,aAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYF,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKN,kBAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYF,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKP,yBAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYF,QAAAA,OAAO,EAAE,KAArB;AAA4BD,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAA3C,OAAP;;AACF;AACE,aAAOH,KAAP;AAZJ;AAcD,CAfD;;AAgBA,eAAeD,YAAf","sourcesContent":["import {\r\n  FETCH_COLLECTIONS_SUCCESS,\r\n  FETCH_ORDERS_START,\r\n  PURCHASE_FAIL,\r\n  PURCHASE_START,\r\n  PURCHASE_SUCCESS,\r\n} from \"../actions/typeActions\";\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n};\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PURCHASE_START:\r\n      return { ...state, loading: true };\r\n    case PURCHASE_SUCCESS:\r\n      return { ...state, loading: false };\r\n    case PURCHASE_FAIL:\r\n      return { ...state, loading: false };\r\n    case FETCH_ORDERS_START:\r\n      return { ...state, loading: true };\r\n    case FETCH_COLLECTIONS_SUCCESS:\r\n      return { ...state, loading: false, orders: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default orderReducer;\r\n"]},"metadata":{},"sourceType":"module"}