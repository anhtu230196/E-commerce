{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  console.log(\"cartItems:\", cartItems);\n  console.log(\"cartItemToAdd:\", cartItemToAdd);\n  const cartUpdate = [...cartItems];\n  let index = cartUpdate.findIndex(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (index === -1) {\n    return [...cartUpdate, { ...cartItemToAdd,\n      quantity: 1\n    }];\n  } else {\n    cartUpdate[index] = { ...cartUpdate[index],\n      quantity: cartUpdate[index] + 1\n    };\n    return [...cartUpdate];\n  }\n};\nexport const clearAllItemFromCart = (cartItems, cartItemToClear) => {\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n};\nexport const changeQuantityItemFromCart = (cartItems, cartItemToChange, addMethod) => {\n  console.log(cartItems);\n  console.log(cartItemToChange);\n  console.log(addMethod);\n  let cartUpdate = [...cartItems];\n  let index = cartUpdate.findIndex(cartItem => cartItem.id === cartItemToChange.id);\n  console.log(index);\n\n  if (addMethod) {\n    cartUpdate[index].quantity += 1;\n  } else {\n    if (cartUpdate[index].quantity > 1) {\n      cartUpdate[index].quantity -= 1;\n    } else {\n      cartUpdate.splice(index, 1);\n    }\n  }\n\n  return [...cartUpdate];\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/Front-End/ReactJS/crwn-shopping-page/src/redux/utils/cartUtils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","console","log","cartUpdate","index","findIndex","cartItem","id","quantity","clearAllItemFromCart","cartItemToClear","filter","changeQuantityItemFromCart","cartItemToChange","addMethod","splice"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,SAA1B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,aAA9B;AAEA,QAAMG,UAAU,GAAG,CAAC,GAAGJ,SAAJ,CAAnB;AAEA,MAAIK,KAAK,GAAGD,UAAU,CAACE,SAAX,CACTC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBP,aAAa,CAACO,EADlC,CAAZ;;AAGA,MAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,WAAO,CAAC,GAAGD,UAAJ,EAAgB,EAAE,GAAGH,aAAL;AAAoBQ,MAAAA,QAAQ,EAAE;AAA9B,KAAhB,CAAP;AACD,GAFD,MAEO;AACLL,IAAAA,UAAU,CAACC,KAAD,CAAV,GAAoB,EAClB,GAAGD,UAAU,CAACC,KAAD,CADK;AAElBI,MAAAA,QAAQ,EAAEL,UAAU,CAACC,KAAD,CAAV,GAAoB;AAFZ,KAApB;AAIA,WAAO,CAAC,GAAGD,UAAJ,CAAP;AACD;AACF,CAlBM;AAoBP,OAAO,MAAMM,oBAAoB,GAAG,CAACV,SAAD,EAAYW,eAAZ,KAAgC;AAClE,SAAOX,SAAS,CAACY,MAAV,CAAkBL,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBG,eAAe,CAACH,EAA/D,CAAP;AACD,CAFM;AAIP,OAAO,MAAMK,0BAA0B,GAAG,CACxCb,SADwC,EAExCc,gBAFwC,EAGxCC,SAHwC,KAIrC;AACHb,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYW,gBAAZ;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYY,SAAZ;AACA,MAAIX,UAAU,GAAG,CAAC,GAAGJ,SAAJ,CAAjB;AACA,MAAIK,KAAK,GAAGD,UAAU,CAACE,SAAX,CACTC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBM,gBAAgB,CAACN,EADrC,CAAZ;AAGAN,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;;AACA,MAAIU,SAAJ,EAAe;AACbX,IAAAA,UAAU,CAACC,KAAD,CAAV,CAAkBI,QAAlB,IAA8B,CAA9B;AACD,GAFD,MAEO;AACL,QAAIL,UAAU,CAACC,KAAD,CAAV,CAAkBI,QAAlB,GAA6B,CAAjC,EAAoC;AAClCL,MAAAA,UAAU,CAACC,KAAD,CAAV,CAAkBI,QAAlB,IAA8B,CAA9B;AACD,KAFD,MAEO;AACLL,MAAAA,UAAU,CAACY,MAAX,CAAkBX,KAAlB,EAAyB,CAAzB;AACD;AACF;;AACD,SAAO,CAAC,GAAGD,UAAJ,CAAP;AACD,CAvBM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n  console.log(\"cartItems:\", cartItems);\r\n  console.log(\"cartItemToAdd:\", cartItemToAdd);\r\n\r\n  const cartUpdate = [...cartItems];\r\n\r\n  let index = cartUpdate.findIndex(\r\n    (cartItem) => cartItem.id === cartItemToAdd.id\r\n  );\r\n  if (index === -1) {\r\n    return [...cartUpdate, { ...cartItemToAdd, quantity: 1 }];\r\n  } else {\r\n    cartUpdate[index] = {\r\n      ...cartUpdate[index],\r\n      quantity: cartUpdate[index] + 1,\r\n    };\r\n    return [...cartUpdate];\r\n  }\r\n};\r\n\r\nexport const clearAllItemFromCart = (cartItems, cartItemToClear) => {\r\n  return cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\r\n};\r\n\r\nexport const changeQuantityItemFromCart = (\r\n  cartItems,\r\n  cartItemToChange,\r\n  addMethod\r\n) => {\r\n  console.log(cartItems);\r\n  console.log(cartItemToChange);\r\n  console.log(addMethod);\r\n  let cartUpdate = [...cartItems];\r\n  let index = cartUpdate.findIndex(\r\n    (cartItem) => cartItem.id === cartItemToChange.id\r\n  );\r\n  console.log(index);\r\n  if (addMethod) {\r\n    cartUpdate[index].quantity += 1;\r\n  } else {\r\n    if (cartUpdate[index].quantity > 1) {\r\n      cartUpdate[index].quantity -= 1;\r\n    } else {\r\n      cartUpdate.splice(index, 1);\r\n    }\r\n  }\r\n  return [...cartUpdate];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}