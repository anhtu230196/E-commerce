{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  // console.log(\"cartItems:\", cartItems);\n  // console.log(\"cartItemToAdd:\", cartItemToAdd);\n  // let index = cartItems.findIndex(\n  //   (cartItem) => cartItem.id === cartItemToAdd.id\n  // );\n  // if (index === -1) {\n  //   return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n  // } else {\n  //   cartItems[index].quantity += 1;\n  //   return [...cartItems];\n  // }\n  const existingItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd);\n\n  if (existingItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } else {\n    return [...cartItems, { ...cartItemToAdd,\n      quantity: 1\n    }];\n  }\n};\nexport const clearAllItemFromCart = (cartItems, cartItemToClear) => {\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n};\nexport const changeQuantityItemFromCart = (cartItems, cartItemToChange, addMethod) => {\n  console.log(cartItems);\n  console.log(cartItemToChange);\n  console.log(addMethod);\n  let cartUpdate = [...cartItems];\n  let index = cartUpdate.findIndex(cartItem => cartItem.id === cartItemToChange.id);\n  console.log(index);\n\n  if (addMethod) {\n    cartUpdate[index].quantity += 1;\n  } else {\n    if (cartUpdate[index].quantity > 1) {\n      cartUpdate[index].quantity -= 1;\n    } else {\n      cartUpdate.splice(index, 1);\n    }\n  }\n\n  return [...cartUpdate];\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/Front-End/ReactJS/crwn-shopping-page/src/redux/utils/cartUtils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingItem","find","cartItem","id","map","quantity","clearAllItemFromCart","cartItemToClear","filter","changeQuantityItemFromCart","cartItemToChange","addMethod","console","log","cartUpdate","index","findIndex","splice"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,YAAY,GAAGF,SAAS,CAACG,IAAV,CAClBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aADX,CAArB;;AAGA,MAAIC,YAAJ,EAAkB;AAChB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD,GAND,MAMO;AACL,WAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,MAAAA,QAAQ,EAAE;AAA9B,KAAf,CAAP;AACD;AACF,CA1BM;AA4BP,OAAO,MAAMC,oBAAoB,GAAG,CAACR,SAAD,EAAYS,eAAZ,KAAgC;AAClE,SAAOT,SAAS,CAACU,MAAV,CAAkBN,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBI,eAAe,CAACJ,EAA/D,CAAP;AACD,CAFM;AAIP,OAAO,MAAMM,0BAA0B,GAAG,CACxCX,SADwC,EAExCY,gBAFwC,EAGxCC,SAHwC,KAIrC;AACHC,EAAAA,OAAO,CAACC,GAAR,CAAYf,SAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,MAAIG,UAAU,GAAG,CAAC,GAAGhB,SAAJ,CAAjB;AACA,MAAIiB,KAAK,GAAGD,UAAU,CAACE,SAAX,CACTd,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBO,gBAAgB,CAACP,EADrC,CAAZ;AAGAS,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;;AACA,MAAIJ,SAAJ,EAAe;AACbG,IAAAA,UAAU,CAACC,KAAD,CAAV,CAAkBV,QAAlB,IAA8B,CAA9B;AACD,GAFD,MAEO;AACL,QAAIS,UAAU,CAACC,KAAD,CAAV,CAAkBV,QAAlB,GAA6B,CAAjC,EAAoC;AAClCS,MAAAA,UAAU,CAACC,KAAD,CAAV,CAAkBV,QAAlB,IAA8B,CAA9B;AACD,KAFD,MAEO;AACLS,MAAAA,UAAU,CAACG,MAAX,CAAkBF,KAAlB,EAAyB,CAAzB;AACD;AACF;;AACD,SAAO,CAAC,GAAGD,UAAJ,CAAP;AACD,CAvBM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n  // console.log(\"cartItems:\", cartItems);\r\n  // console.log(\"cartItemToAdd:\", cartItemToAdd);\r\n\r\n  // let index = cartItems.findIndex(\r\n  //   (cartItem) => cartItem.id === cartItemToAdd.id\r\n  // );\r\n  // if (index === -1) {\r\n  //   return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n  // } else {\r\n  //   cartItems[index].quantity += 1;\r\n  //   return [...cartItems];\r\n  // }\r\n\r\n  const existingItem = cartItems.find(\r\n    (cartItem) => cartItem.id === cartItemToAdd\r\n  );\r\n  if (existingItem) {\r\n    return cartItems.map((cartItem) =>\r\n      cartItem.id === cartItemToAdd.id\r\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n        : cartItem\r\n    );\r\n  } else {\r\n    return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n  }\r\n};\r\n\r\nexport const clearAllItemFromCart = (cartItems, cartItemToClear) => {\r\n  return cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\r\n};\r\n\r\nexport const changeQuantityItemFromCart = (\r\n  cartItems,\r\n  cartItemToChange,\r\n  addMethod\r\n) => {\r\n  console.log(cartItems);\r\n  console.log(cartItemToChange);\r\n  console.log(addMethod);\r\n  let cartUpdate = [...cartItems];\r\n  let index = cartUpdate.findIndex(\r\n    (cartItem) => cartItem.id === cartItemToChange.id\r\n  );\r\n  console.log(index);\r\n  if (addMethod) {\r\n    cartUpdate[index].quantity += 1;\r\n  } else {\r\n    if (cartUpdate[index].quantity > 1) {\r\n      cartUpdate[index].quantity -= 1;\r\n    } else {\r\n      cartUpdate.splice(index, 1);\r\n    }\r\n  }\r\n  return [...cartUpdate];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}