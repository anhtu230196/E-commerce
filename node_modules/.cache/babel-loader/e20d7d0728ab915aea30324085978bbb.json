{"ast":null,"code":"import { ADD_ITEM, CHANGE_QUANTITY, CLEAR_ITEM_FROM_CART, TOGGLE_CART_DROPDOWN } from \"../actions/typeActions\";\nimport { addItemToCart, changeQuantityItemFromCart, clearAllItemFromCart } from \"../utils/cartUtils\";\nconst initialState = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_CART_DROPDOWN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CHANGE_QUANTITY:\n      let cartUpdate = [...state.cartItems];\n      let index = cartUpdate.findIndex(cartItem => cartItem.id === action.item.id);\n\n      if (index !== -1) {\n        if (action.add) {\n          cartUpdate[index].quantity += 1;\n        } else {\n          if (cartUpdate[index] > 1) {\n            cartUpdate[index] -= 1;\n          } else {\n            alert(\"no way\");\n          }\n        }\n      }\n\n      state.cartItems = cartUpdate;\n      return { ...state\n      };\n\n    case CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: clearAllItemFromCart(state.cartItems, action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Front-End/ReactJS/crwn-shopping-page/src/redux/reducers/cartReducer.js"],"names":["ADD_ITEM","CHANGE_QUANTITY","CLEAR_ITEM_FROM_CART","TOGGLE_CART_DROPDOWN","addItemToCart","changeQuantityItemFromCart","clearAllItemFromCart","initialState","hidden","cartItems","cartReducer","state","action","type","payload","cartUpdate","index","findIndex","cartItem","id","item","add","quantity","alert"],"mappings":"AAAA,SACEA,QADF,EAEEC,eAFF,EAGEC,oBAHF,EAIEC,oBAJF,QAKO,wBALP;AAMA,SACEC,aADF,EAEEC,0BAFF,EAGEC,oBAHF,QAIO,oBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,oBAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAA3B,OAAP;;AACF,SAAKR,QAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,SAAS,EAAEL,aAAa,CAACO,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AAFnB,OAAP;;AAKF,SAAKb,eAAL;AACE,UAAIc,UAAU,GAAG,CAAC,GAAGJ,KAAK,CAACF,SAAV,CAAjB;AACA,UAAIO,KAAK,GAAGD,UAAU,CAACE,SAAX,CACTC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBP,MAAM,CAACQ,IAAP,CAAYD,EADhC,CAAZ;;AAGA,UAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,YAAIJ,MAAM,CAACS,GAAX,EAAgB;AACdN,UAAAA,UAAU,CAACC,KAAD,CAAV,CAAkBM,QAAlB,IAA8B,CAA9B;AACD,SAFD,MAEO;AACL,cAAIP,UAAU,CAACC,KAAD,CAAV,GAAoB,CAAxB,EAA2B;AACzBD,YAAAA,UAAU,CAACC,KAAD,CAAV,IAAqB,CAArB;AACD,WAFD,MAEO;AACLO,YAAAA,KAAK,CAAC,QAAD,CAAL;AACD;AACF;AACF;;AACDZ,MAAAA,KAAK,CAACF,SAAN,GAAkBM,UAAlB;AACA,aAAO,EAAE,GAAGJ;AAAL,OAAP;;AAEF,SAAKT,oBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,SAAS,EAAEH,oBAAoB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AAF1B,OAAP;;AAIF;AACE,aAAOH,KAAP;AAlCJ;AAoCD,CArCD;;AAuCA,eAAeD,WAAf","sourcesContent":["import {\r\n  ADD_ITEM,\r\n  CHANGE_QUANTITY,\r\n  CLEAR_ITEM_FROM_CART,\r\n  TOGGLE_CART_DROPDOWN,\r\n} from \"../actions/typeActions\";\r\nimport {\r\n  addItemToCart,\r\n  changeQuantityItemFromCart,\r\n  clearAllItemFromCart,\r\n} from \"../utils/cartUtils\";\r\n\r\nconst initialState = {\r\n  hidden: true,\r\n  cartItems: [],\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_CART_DROPDOWN:\r\n      return { ...state, hidden: !state.hidden };\r\n    case ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: addItemToCart(state.cartItems, action.payload),\r\n      };\r\n\r\n    case CHANGE_QUANTITY:\r\n      let cartUpdate = [...state.cartItems];\r\n      let index = cartUpdate.findIndex(\r\n        (cartItem) => cartItem.id === action.item.id\r\n      );\r\n      if (index !== -1) {\r\n        if (action.add) {\r\n          cartUpdate[index].quantity += 1;\r\n        } else {\r\n          if (cartUpdate[index] > 1) {\r\n            cartUpdate[index] -= 1;\r\n          } else {\r\n            alert(\"no way\");\r\n          }\r\n        }\r\n      }\r\n      state.cartItems = cartUpdate;\r\n      return { ...state };\r\n\r\n    case CLEAR_ITEM_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: clearAllItemFromCart(state.cartItems, action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}