{"ast":null,"code":"import { FETCH_COLLECTIONS_FAILURE, FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS } from \"../actions/typeActions\";\nconst initialState = {\n  collections: null,\n  isFetching: false,\n  errorMessage: null\n};\n\nconst shopReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_COLLECTIONS_START:\n      return { ...state,\n        isFetching: true\n      };\n\n    case FETCH_COLLECTIONS_FAILURE:\n      return { ...state,\n        errorMessage: action.payload,\n        isFetching: true\n      };\n\n    case FETCH_COLLECTIONS_SUCCESS:\n      return { ...state,\n        collections: action.payload,\n        isFetching: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Front-End/ReactJS/crwn-shopping-page/src/redux/reducers/shopReducer.js"],"names":["FETCH_COLLECTIONS_FAILURE","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","initialState","collections","isFetching","errorMessage","shopReducer","state","action","type","payload"],"mappings":"AAAA,SACEA,yBADF,EAEEC,uBAFF,EAGEC,yBAHF,QAIO,wBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,uBAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYH,QAAAA,UAAU,EAAE;AAAxB,OAAP;;AACF,SAAKL,yBAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYF,QAAAA,YAAY,EAAEG,MAAM,CAACE,OAAjC;AAA0CN,QAAAA,UAAU,EAAE;AAAtD,OAAP;;AACF,SAAKH,yBAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYJ,QAAAA,WAAW,EAAEK,MAAM,CAACE,OAAhC;AAAyCN,QAAAA,UAAU,EAAE;AAArD,OAAP;;AACF;AACE,aAAOG,KAAP;AARJ;AAUD,CAXD;;AAaA,eAAeD,WAAf","sourcesContent":["import {\r\n  FETCH_COLLECTIONS_FAILURE,\r\n  FETCH_COLLECTIONS_START,\r\n  FETCH_COLLECTIONS_SUCCESS,\r\n} from \"../actions/typeActions\";\r\n\r\nconst initialState = {\r\n  collections: null,\r\n  isFetching: false,\r\n  errorMessage: null,\r\n};\r\n\r\nconst shopReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_COLLECTIONS_START:\r\n      return { ...state, isFetching: true };\r\n    case FETCH_COLLECTIONS_FAILURE:\r\n      return { ...state, errorMessage: action.payload, isFetching: true };\r\n    case FETCH_COLLECTIONS_SUCCESS:\r\n      return { ...state, collections: action.payload, isFetching: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default shopReducer;\r\n"]},"metadata":{},"sourceType":"module"}