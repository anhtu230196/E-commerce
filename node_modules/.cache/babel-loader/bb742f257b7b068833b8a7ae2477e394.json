{"ast":null,"code":"import axios from \"axios\";\nimport { AUTH_FAILED, AUTH_START, AUTH_SUCCESS, LOGOUT } from \"./typeActions\";\n\nconst authStart = () => {\n  return {\n    type: AUTH_START\n  };\n};\n\nexport const authSuccess = authData => {\n  localStorage.setItem(\"authentication\", JSON.stringify(authData));\n  return {\n    type: AUTH_SUCCESS,\n    payload: authData\n  };\n};\n\nconst authFailed = () => ({\n  type: AUTH_FAILED\n});\n\nexport const setCurrentUser = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email,\n      password,\n      returnSecureToken: true\n    };\n    let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAD3aeJY71AW-iwfvtK7Z4kxU1KWEc7mqg\";\n\n    if (!isSignup) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAD3aeJY71AW-iwfvtK7Z4kxU1KWEc7mqg\";\n    }\n\n    axios.post(url, authData).then(res => dispatch(authSuccess(res.data))).catch(err => {\n      alert(err.response.data.error.message);\n      dispatch(authFailed());\n    });\n  };\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"authentication\");\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/Front-End/ReactJS/crwn-shopping-page/src/redux/actions/userAction.js"],"names":["axios","AUTH_FAILED","AUTH_START","AUTH_SUCCESS","LOGOUT","authStart","type","authSuccess","authData","localStorage","setItem","JSON","stringify","payload","authFailed","setCurrentUser","email","password","isSignup","dispatch","returnSecureToken","url","post","then","res","data","catch","err","alert","response","error","message","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,YAAlC,EAAgDC,MAAhD,QAA8D,eAA9D;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,SAAO;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJD;;AAMA,OAAO,MAAMK,WAAW,GAAIC,QAAD,IAAc;AACvCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAvC;AACA,SAAO;AACLF,IAAAA,IAAI,EAAEH,YADD;AAELU,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CANM;;AAQP,MAAMM,UAAU,GAAG,OAAO;AAAER,EAAAA,IAAI,EAAEL;AAAR,CAAP,CAAnB;;AAEA,OAAO,MAAMc,cAAc,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AAC3D,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACd,SAAS,EAAV,CAAR;AACA,UAAMG,QAAQ,GAAG;AACfQ,MAAAA,KADe;AAEfC,MAAAA,QAFe;AAGfG,MAAAA,iBAAiB,EAAE;AAHJ,KAAjB;AAKA,QAAIC,GAAG,GACL,uGADF;;AAEA,QAAI,CAACH,QAAL,EAAe;AACbG,MAAAA,GAAG,GACD,mHADF;AAED;;AACDrB,IAAAA,KAAK,CACFsB,IADH,CACQD,GADR,EACab,QADb,EAEGe,IAFH,CAESC,GAAD,IAASL,QAAQ,CAACZ,WAAW,CAACiB,GAAG,CAACC,IAAL,CAAZ,CAFzB,EAGGC,KAHH,CAGUC,GAAD,IAAS;AACdC,MAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,KAAlB,CAAwBC,OAAzB,CAAL;AACAZ,MAAAA,QAAQ,CAACL,UAAU,EAAX,CAAR;AACD,KANH;AAOD,GApBD;AAqBD,CAtBM;AAwBP,OAAO,MAAMkB,MAAM,GAAG,MAAOb,QAAD,IAAc;AACxCV,EAAAA,YAAY,CAACwB,UAAb,CAAwB,gBAAxB;AACAd,EAAAA,QAAQ,CAAC;AAAEb,IAAAA,IAAI,EAAEF;AAAR,GAAD,CAAR;AACD,CAHM","sourcesContent":["import axios from \"axios\";\r\nimport { AUTH_FAILED, AUTH_START, AUTH_SUCCESS, LOGOUT } from \"./typeActions\";\r\n\r\nconst authStart = () => {\r\n  return {\r\n    type: AUTH_START,\r\n  };\r\n};\r\n\r\nexport const authSuccess = (authData) => {\r\n  localStorage.setItem(\"authentication\", JSON.stringify(authData));\r\n  return {\r\n    type: AUTH_SUCCESS,\r\n    payload: authData,\r\n  };\r\n};\r\n\r\nconst authFailed = () => ({ type: AUTH_FAILED });\r\n\r\nexport const setCurrentUser = (email, password, isSignup) => {\r\n  return (dispatch) => {\r\n    dispatch(authStart());\r\n    const authData = {\r\n      email,\r\n      password,\r\n      returnSecureToken: true,\r\n    };\r\n    let url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAD3aeJY71AW-iwfvtK7Z4kxU1KWEc7mqg\";\r\n    if (!isSignup) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAD3aeJY71AW-iwfvtK7Z4kxU1KWEc7mqg\";\r\n    }\r\n    axios\r\n      .post(url, authData)\r\n      .then((res) => dispatch(authSuccess(res.data)))\r\n      .catch((err) => {\r\n        alert(err.response.data.error.message);\r\n        dispatch(authFailed());\r\n      });\r\n  };\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"authentication\");\r\n  dispatch({ type: LOGOUT });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}