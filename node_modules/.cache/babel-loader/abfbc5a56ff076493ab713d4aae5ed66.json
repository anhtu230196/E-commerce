{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nimport { ADD_ITEM, CLEAR_ITEM_FROM_CART, TOGGLE_CART_DROPDOWN } from \"../actions/typeActions\";\nimport { addItemToCart } from \"../utils/cartUtils\";\nconst initialState = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_CART_DROPDOWN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case ADD_ITEM:\n      let cartUpdate = [...state.cartItems];\n      let index = cartUpdate.findIndex(cartItem => cartItem.id === action.payload.id);\n\n      if (index !== -1) {\n        cartUpdate[index].quantity += 1;\n      } else {\n        cartUpdate.push({ ...action.payload,\n          quantity: 1\n        });\n      }\n\n      state.cartItems = cartUpdate;\n      return { ...state\n      };\n\n    case CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/Admin/Documents/Front-End/ReactJS/crwn-shopping-page/src/redux/reducers/cartReducer.js"],"names":["act","ADD_ITEM","CLEAR_ITEM_FROM_CART","TOGGLE_CART_DROPDOWN","addItemToCart","initialState","hidden","cartItems","cartReducer","state","action","type","cartUpdate","index","findIndex","cartItem","id","payload","quantity","push","filter"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,SACEC,QADF,EAEEC,oBAFF,EAGEC,oBAHF,QAIO,wBAJP;AAKA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,IADW;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,oBAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAA3B,OAAP;;AACF,SAAKL,QAAL;AACE,UAAIW,UAAU,GAAG,CAAC,GAAGH,KAAK,CAACF,SAAV,CAAjB;AACA,UAAIM,KAAK,GAAGD,UAAU,CAACE,SAAX,CACTC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAP,CAAeD,EADnC,CAAZ;;AAGA,UAAIH,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBD,QAAAA,UAAU,CAACC,KAAD,CAAV,CAAkBK,QAAlB,IAA8B,CAA9B;AACD,OAFD,MAEO;AACLN,QAAAA,UAAU,CAACO,IAAX,CAAgB,EAAE,GAAGT,MAAM,CAACO,OAAZ;AAAqBC,UAAAA,QAAQ,EAAE;AAA/B,SAAhB;AACD;;AACDT,MAAAA,KAAK,CAACF,SAAN,GAAkBK,UAAlB;AACA,aAAO,EACL,GAAGH;AADE,OAAP;;AAIF,SAAKP,oBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBa,MAAhB,CACRL,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAP,CAAeD,EADpC;AAFN,OAAP;;AAMF;AACE,aAAOP,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,WAAf","sourcesContent":["import { act } from \"react-dom/test-utils\";\r\nimport {\r\n  ADD_ITEM,\r\n  CLEAR_ITEM_FROM_CART,\r\n  TOGGLE_CART_DROPDOWN,\r\n} from \"../actions/typeActions\";\r\nimport { addItemToCart } from \"../utils/cartUtils\";\r\n\r\nconst initialState = {\r\n  hidden: true,\r\n  cartItems: [],\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_CART_DROPDOWN:\r\n      return { ...state, hidden: !state.hidden };\r\n    case ADD_ITEM:\r\n      let cartUpdate = [...state.cartItems];\r\n      let index = cartUpdate.findIndex(\r\n        (cartItem) => cartItem.id === action.payload.id\r\n      );\r\n      if (index !== -1) {\r\n        cartUpdate[index].quantity += 1;\r\n      } else {\r\n        cartUpdate.push({ ...action.payload, quantity: 1 });\r\n      }\r\n      state.cartItems = cartUpdate;\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case CLEAR_ITEM_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (cartItem) => cartItem.id !== action.payload.id\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n"]},"metadata":{},"sourceType":"module"}