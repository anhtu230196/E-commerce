{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  // console.log(\"cartItems:\", cartItems);\n  // console.log(\"cartItemToAdd:\", cartItemToAdd);\n  // let index = cartItems.findIndex(\n  //   (cartItem) => cartItem.id === cartItemToAdd.id\n  // );\n  // if (index === -1) {\n  //   return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n  // } else {\n  //   cartItems[index] = {\n  //     ...cartItems[index],\n  //     quantity: cartItems[index].quantity + 1,\n  //   };\n  //   return [...cartItems];\n  // }\n  const cartItemExisting = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (cartItemExisting) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n  const itemExisting = cartItems.find(cartItem => cartItem.id === itemToRemove.id);\n\n  if (itemExisting.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== itemToRemove.id);\n  }\n\n  return cartItems.map(item => item.id === itemToRemove.id ? { ...item,\n    quantity: item.quantity - 1\n  } : item);\n};\nexport const clearAllItemFromCart = (cartItems, cartItemToClear) => {\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToClear.id);\n};","map":{"version":3,"sources":["C:/Users/Admin/Documents/Front-End/ReactJS/crwn-shopping-page/src/redux/utils/cartUtils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","cartItemExisting","find","cartItem","id","map","quantity","removeItemFromCart","itemToRemove","itemExisting","filter","item","clearAllItemFromCart","cartItemToClear"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB;;AAGA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD;;AACD,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACD,CA3BM;AA6BP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,YAAZ,KAA6B;AAC7D,QAAMC,YAAY,GAAGV,SAAS,CAACG,IAAV,CAClBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBI,YAAY,CAACJ,EADxB,CAArB;;AAGA,MAAIK,YAAY,CAACH,QAAb,KAA0B,CAA9B,EAAiC;AAC/B,WAAOP,SAAS,CAACW,MAAV,CAAkBP,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBI,YAAY,CAACJ,EAA5D,CAAP;AACD;;AACD,SAAOL,SAAS,CAACM,GAAV,CAAeM,IAAD,IACnBA,IAAI,CAACP,EAAL,KAAYI,YAAY,CAACJ,EAAzB,GACI,EAAE,GAAGO,IAAL;AAAWL,IAAAA,QAAQ,EAAEK,IAAI,CAACL,QAAL,GAAgB;AAArC,GADJ,GAEIK,IAHC,CAAP;AAKD,CAZM;AAcP,OAAO,MAAMC,oBAAoB,GAAG,CAACb,SAAD,EAAYc,eAAZ,KAAgC;AAClE,SAAOd,SAAS,CAACW,MAAV,CAAkBP,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBS,eAAe,CAACT,EAA/D,CAAP;AACD,CAFM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\r\n  // console.log(\"cartItems:\", cartItems);\r\n  // console.log(\"cartItemToAdd:\", cartItemToAdd);\r\n\r\n  // let index = cartItems.findIndex(\r\n  //   (cartItem) => cartItem.id === cartItemToAdd.id\r\n  // );\r\n  // if (index === -1) {\r\n  //   return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n  // } else {\r\n  //   cartItems[index] = {\r\n  //     ...cartItems[index],\r\n  //     quantity: cartItems[index].quantity + 1,\r\n  //   };\r\n  //   return [...cartItems];\r\n  // }\r\n  const cartItemExisting = cartItems.find(\r\n    (cartItem) => cartItem.id === cartItemToAdd.id\r\n  );\r\n  if (cartItemExisting) {\r\n    return cartItems.map((cartItem) =>\r\n      cartItem.id === cartItemToAdd.id\r\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n        : cartItem\r\n    );\r\n  }\r\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\r\n  const itemExisting = cartItems.find(\r\n    (cartItem) => cartItem.id === itemToRemove.id\r\n  );\r\n  if (itemExisting.quantity === 1) {\r\n    return cartItems.filter((cartItem) => cartItem.id !== itemToRemove.id);\r\n  }\r\n  return cartItems.map((item) =>\r\n    item.id === itemToRemove.id\r\n      ? { ...item, quantity: item.quantity - 1 }\r\n      : item\r\n  );\r\n};\r\n\r\nexport const clearAllItemFromCart = (cartItems, cartItemToClear) => {\r\n  return cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}